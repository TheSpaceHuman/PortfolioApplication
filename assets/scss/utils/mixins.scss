@function rem($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1rem;
}

@mixin size($width,$height: $width) {
  width: $width;
  height: $height;
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}
}
// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
          eot: "?",
          svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
          otf: "opentype",
          ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

// -----------------------------------
// margin and padding helpers
// -----------------------------------

@mixin indents($spaceamounts) {
  $sides: (top, bottom, left, right, x, y);
  @each $space in $spaceamounts {
    @each $side in $sides {
      .m#{str-slice($side, 0, 1)}-#{$space} {
        @if($side == 'x') {
          margin-left: #{$space}px !important;
          margin-right: #{$space}px !important;
        } @else if($side == 'y') {
          margin-top: #{$space}px !important;
          margin-bottom: #{$space}px !important;
        } @else {
          margin-#{$side}: #{$space}px !important;
        }
      }
      .m-#{$space} {
        margin: #{$space}px !important;;
      }

      .p#{str-slice($side, 0, 1)}-#{$space} {
        @if($side == 'x') {
          padding-left: #{$space}px !important;
          padding-right: #{$space}px !important;
        } @else if($side == 'y') {
          padding-top: #{$space}px !important;
          padding-bottom: #{$space}px !important;
        } @else {
          padding-#{$side}: #{$space}px !important;
        }
      }
      .p-#{$space} {
        padding: #{$space}px !important;;
      }

    }
  }
}

